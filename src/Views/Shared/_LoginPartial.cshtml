@using Microsoft.AspNetCore.Identity
@using Wikirace.Utils
@using Wikirace.Data
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    var isAnonymous = user?.IsAnonymous ?? false;
}


@if (isAnonymous)
{
    <a class="btn-gray hover-pop" asp-area="Identity" asp-page="/Account/Login">Login</a>
    <a class="btn-gray hover-pop" asp-area="Identity" asp-page="/Account/Register">Register</a>
}
else
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new {area = ""})">
    <button type="submit" class="btn-gray rounded-2xl hover-pop">Logout</button>
</form>
    <a class="nav-link text-dark hover-pop" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
    <img src="@user!.AvatarUrl" class="rounded-full h-10 w-10" alt="Avatar" />
</a>
}

@*
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User) && (!(await UserManager.GetUserAsync(User!))?.IsAnonymous ?? false))
{
<li class="nav-item">
<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello
@User.Identity?.Name!</a>
</li>
<li class="nav-item">
<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
</form>
</li>
}
else
{
<li class="nav-item">
<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
</li>
<li class="nav-item">
<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
</li>
}
</ul> *@
